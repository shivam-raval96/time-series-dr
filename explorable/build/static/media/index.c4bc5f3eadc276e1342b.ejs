export default "<!doctype html>\n\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <style id=\"distill-article-specific-styles\">\n    <%=require(\"../static/styles.css\") %>\n  </style>\n  <script src=\"https://distill.pub/template.v2.js\"></script>\n</head>\n\n<body>\n\n  <d-front-matter>\n    <script type=\"text/json\">\n      <%= JSON.stringify(require(\"./frontmatter.json\"), null, 4) %>\n    </script>\n  </d-front-matter>\n\n  <d-title>\n    <h1>Distill Example</h1>\n    <p>An example project using Webpack, Babel, and Svelte. </p>\n  </d-title>\n\n  <d-article>\n\n    <p>\n      Welcome to a Distill example article: meant to get you writing up your research quickly. Let's demo some\n      features:\n    </p>\n\n    <h4>Hot reloading</h4>\n    <p>Your browser can automatically refresh when your editor saves. This should work by default, and you can disable\n      it in <code>index.js</code>. Sometimes hot reloading isn't fully compatible with all types of code, so you may\n      need to try manually reloading if you're seeing inconsistent behavior.</p>\n\n    <h4>Inlined SVGs</h4>\n    <p>SVGs are so small that it can be nice to save an extra request and simply inline them intop your HTML:</p>\n\n    <figure>\n      <%= require(\"../static/diagrams/diffparam.svg\") %>\n    </figure>\n\n    <style>\n      #arrow-2 #arrow-head {\n        fill: steelblue;\n      }\n\n      #arrow-2 #arrow-line {\n        stroke: steelblue;\n      }\n    </style>\n\n    <p>Let's use some CSS to style an inlined SVG. Here's an arrow\n      <svg width=\"27px\" height=\"9px\" viewBox=\"0 0 27 9\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <g id=\"arrow\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <g id=\"Group\" transform=\"translate(-0.195652, 0.0)\">\n            <path d=\"M10.5,4.5 L26.8913043,4.5\" id=\"arrow-line\" stroke=\"#FF6600\" stroke-width=\"2\"\n              stroke-linecap=\"square\" stroke-dasharray=\"6,4\"></path>\n            <g id=\"arrow-head\" transform=\"translate(5.0, 4.5) scale(-1, 1) translate(-5.0, -4.5) translate(0.5, 0.0)\"\n              fill=\"#FF6600\" fill-rule=\"nonzero\">\n              <path\n                d=\"M4.5,0 C5.67007294,3.25202425 6.85281213,6.29180565 9,9 L4.5,7.3125 L0,9 C2.13530145,6.28972675 3.34126793,3.24998975 4.5,0 Z\"\n                id=\"Shape\" transform=\"translate(4.5, 4.5) rotate(-270.0) translate(-4.5, -4.5) \"></path>\n            </g>\n          </g>\n        </g>\n      </svg> that we\n      can make\n      inline. If you'd like to change the color in CSS, we can do so. Let's put the second arrow (<span\n        id=\"arrow-2\"><svg width=\"27px\" height=\"9px\" viewBox=\"0 0 27 9\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n          <g id=\"arrow\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <g id=\"Group\" transform=\"translate(-0.195652, 0.0)\">\n              <path d=\"M10.5,4.5 L26.8913043,4.5\" id=\"arrow-line\" stroke=\"#FF6600\" stroke-width=\"2\"\n                stroke-linecap=\"square\" stroke-dasharray=\"6,4\"></path>\n              <g id=\"arrow-head\" transform=\"translate(5.0, 4.5) scale(-1, 1) translate(-5.0, -4.5) translate(0.5, 0.0)\"\n                fill=\"#FF6600\" fill-rule=\"nonzero\">\n                <path\n                  d=\"M4.5,0 C5.67007294,3.25202425 6.85281213,6.29180565 9,9 L4.5,7.3125 L0,9 C2.13530145,6.28972675 3.34126793,3.24998975 4.5,0 Z\"\n                  id=\"Shape\" transform=\"translate(4.5, 4.5) rotate(-270.0) translate(-4.5, -4.5) \"></path>\n              </g>\n            </g>\n          </g>\n        </svg></span>) in a tag with an ID, so we can\n      target it in CSS.\n\n      <d-code block=\"\" language=\"css\">\n        #arrow-2 #arrow-head {\n        fill: steelblue;\n        }\n\n        #arrow-2 #arrow-line {\n        stroke: steelblue;\n        }\n      </d-code>\n\n    </p>\n\n    <h4>Formulas</h4>\n\n    <p>Here's a test of an inline equation <d-math>c = a^2 + b^2</d-math>. Can also be used with configurable katex\n      settings, for example by\n      using inline <code>$</code> signs: <d-math>x^2</d-math>. There are also block equations:</p>\n    <d-math block=\"\">\n      c = \\pm \\sqrt{ \\sum_{i=0}^{n}{a^{222} + b^2}}\n    </d-math>\n    <p>Math can also be quite involved:</p>\n    <d-math block=\"\">\n      \\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}}\n      {1+\\frac{e^{-6\\pi}} {1+\\frac{e^{-8\\pi}} {1+\\cdots} } } }\n    </d-math>\n\n    <p>We've also been experimenting with <a\n        href=\"https://github.com/distillpub/template/wiki/Annotated-Formulas\">annotated formulas</a>:</p>\n\n    <style>\n      .eq-grid {\n        display: grid;\n        justify-content: start;\n        grid-row-gap: 10px;\n      }\n\n      .eq-grid figcaption d-math {\n        font-size: 100%;\n      }\n\n      .eq-grid .expansion-marker {\n        border: 1px solid #CCC;\n        border-bottom: none;\n        height: .5em;\n        width: 100%;\n      }\n    </style>\n\n    <figure class=\"eq-grid\">\n\n      <div style=\"grid-row: 1; grid-column: 1;\">\n        <d-math> C ~~~=~~~~ </d-math>\n      </div>\n      <div style=\"grid-row: 1; grid-column: 2;\">\n        <d-math> H^E_D(X, Z) </d-math>\n      </div>\n      <div style=\"grid-row: 1; grid-column: 3;\">\n        <d-math> ~~~-~~~ </d-math>\n      </div>\n      <div style=\"grid-row: 1; grid-column: 4;\">\n        <d-math> H^E_E(X, Z) </d-math>\n      </div>\n\n\n      <div class=\"expansion-marker\" style=\"grid-row: 2; grid-column: 4 / 7; \"></div>\n\n      <div style=\"grid-row: 3; grid-column: 1;\">\n        <d-math> ~~~~~~~=~~~~ </d-math>\n      </div>\n      <div style=\"grid-row: 3; grid-column: 2;\">\n        <d-math> H^E_D(X, Z) </d-math>\n      </div>\n      <div style=\"grid-row: 3; grid-column: 3;\">\n        <d-math> ~~~-~~~ </d-math>\n      </div>\n      <div style=\"grid-row: 3; grid-column: 4;\">\n        <d-math> H^E_E(Z | X) </d-math>\n      </div>\n      <div style=\"grid-row: 3; grid-column: 5;\">\n        <d-math> ~~~-~~~ </d-math>\n      </div>\n      <div style=\"grid-row: 3; grid-column: 6;\">\n        <d-math> H^E_E(X) </d-math>\n      </div>\n\n      <figcaption style=\"grid-row: 4; grid-column: 4; max-width:135px;\">\n        Bits to represent <d-math>z</d-math><br> if you already know <d-math>x</d-math>.\n      </figcaption>\n      <figcaption style=\"grid-row: 4; grid-column: 6; max-width:120px;\">\n        Bits to represent<br>\n        <d-math>x</d-math> by itself.\n      </figcaption>\n\n    </figure>\n\n    <h4>Citations</h4>\n\n    <p>We can<d-cite key=\"mercier2011humans\"></d-cite> also cite <d-cite\n        key=\"gregor2015draw,mercier2011humans,openai2018charter\"></d-cite> external publications. <d-cite\n        key=\"dong2014image,dumoulin2016guide,mordvintsev2015inceptionism\"></d-cite>. We should also be testing\n      footnotes\n      <d-footnote id=\"d-footnote-1\">This will become a hoverable footnote. This will become a hoverable footnote. This\n        will become a\n        hoverable footnote. This will become a hoverable footnote. This will become a hoverable footnote. This will\n        become a hoverable footnote. This will become a hoverable footnote. This will become a hoverable footnote.\n      </d-footnote>. There are multiple footnotes, and they appear in the appendix<d-footnote id=\"d-footnote-2\">Given I\n        have coded them\n        right. Also, here's math in a footnote: <d-math>c = \\sum_0^i{x}</d-math>. Also, a citation. Box-ception<d-cite\n          key=\"gregor2015draw\"></d-cite>!</d-footnote> as well.</p>\n\n\n    <h4>Displaying code</h4>\n    <p>Some inline javascript:<d-code language=\"javascript\">var x = 25;</d-code>. And here's a javascript code block.\n    </p>\n\n    <d-code block=\"\" language=\"javascript\">\n      var x = 25;\n      function(x){\n      return x * x;\n      }\n    </d-code>\n    <p>We also support some highlighting.</p>\n    <d-code block=\"\" language=\"python\">\n      # Python 3: Fibonacci series up to n\n      def fib(n):\n      a, b = 0, 1\n      while a &lt; n: print(a, end=' ' ) a, b=b, a+b </d-code>\n\n    <h4>Tables</h4>\n    <p>We have simple tables that try to stay readable at most screen sizes:\n    </p>\n\n    <style>\n      #example-table {\n        overflow-x: scroll;\n      }\n\n      #example-table th {\n        white-space: nowrap;\n      }\n\n      #example-table tbody th {\n        font-weight: initial;\n        border-bottom: 1px solid rgb(242, 242, 242);\n      }\n\n      #example-table tbody tr:last-of-type th {\n        border-bottom: inherit;\n      }\n\n      #example-table td,\n      #example-table thead th {\n        text-align: center;\n      }\n\n      #example-table td {\n        border-color: rgb(242, 242, 242);\n      }\n\n      #example-table td.no {\n        background-color: #f6f6f6;\n      }\n    </style>\n    <table id=\"example-table\">\n      <thead>\n        <tr>\n          <th></th>\n          <th scope=\"col\">Parallel</th>\n          <th scope=\"col\">Efficient</th>\n          <th scope=\"col\">Reversible</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">GANs</th>\n          <td>Yes</td>\n          <td>Yes</td>\n          <td class=\"no\">No</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">Flow Models</th>\n          <td>Yes</td>\n          <td class=\"no\">No</td>\n          <td>Yes</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">Autoregressive Models</th>\n          <td class=\"no\">No</td>\n          <td>Yes</td>\n          <td>Yes</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h4>Interactive Figures</h4>\n\n    <p>\n      Here's a dynamically instantiated \"figure\". We use Intersection Observers to allow loading resource-heavy\n      figures only when readers scroll close to them. The code for this is in <code>src/index.js</code>.\n    </p>\n\n    <d-figure id=\"svelte-example-dfigure\">\n      <figure>\n        <div id=\"svelte-example-target\"></div>\n        <figcaption>And a static figcaption. You can use citations<d-cite key=\"mercier2011humans\"></d-cite> in this\n          figcaption, but not in text added by javascript.</figcaption>\n      </figure>\n    </d-figure>\n\n    <p>You can't use citation tags (<code>d-cite</code>) in figures that are dynamically loaded using Javascript.\n      Distill statically\n      analyzes your submission for its citations, because they need to be uploaded to indexers and organizations like <a\n        href=\"https://www.crossref.org/\">CrossRef</a> and <a href=\"https://scholar.google.com\">Google Scholar</a>.</p>\n\n    <p>That's it for the example article! Feel free to look at <a\n        href=\"https://github.com/distillpub?utf8=%E2%9C%93&q=post--&type=public\">implementations\n        of existing Distill articles</a>, or ask for help in\n      the <a href=\"http://slack.distill.pub\">Distill Slack Community</a>.</p>\n\n  </d-article>\n\n\n\n  <d-appendix>\n    <h3>Acknowledgments</h3>\n    <p>\n      We are deeply grateful to...\n    </p>\n\n    <p>\n      Many of our diagrams are based on...\n    </p>\n\n    <h3>Author Contributions</h3>\n    <p>\n      <b>Research:</b> Alex developed ...\n    </p>\n\n    <p>\n      <b>Writing & Diagrams:</b> The text was initially drafted by...\n    </p>\n\n\n    <d-footnote-list></d-footnote-list>\n    <d-citation-list></d-citation-list>\n  </d-appendix>\n\n  <!-- bibliography will be inlined during Distill pipeline's pre-rendering -->\n  <d-bibliography src=\"bibliography.bib\"></d-bibliography>\n\n</body>";